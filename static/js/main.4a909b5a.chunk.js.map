{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","TextForm","console","log","_useState","useState","_useState2","Object","slicedToArray","text","setText","_useState3","_useState4","wrdLength","setwrdLength","Fragment","style","color","heading","backgroundColor","value","onChange","e","event","target","arr1","trim","split","len","length","len1","i","handleOnchange","rows","newText","showAlert","App","setMode","setAlert","message","setTimeout","aboutText","document","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.4a909b5a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n\r\n    const capitalize=(word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n  return (props.alert &&\r\n    <div\r\n      className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n      role=\"alert\"\r\n    >\r\n      <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import React from \"react\";\r\n// import PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        {/* <Link className=\"navbar-brand\" to=\"/\">\r\n          {props.title}\r\n        </Link> */}\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link> */}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link\" to=\"/about\">\r\n                {props.aboutText}\r\n              </Link> */}\r\n              {/* <a className=\"nav-link\" href=\"/about\">\r\n                {props.aboutText}\r\n              </a> */}\r\n            </li>\r\n          </ul>\r\n          {/* <form className=\"d-flex\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n        </form> */}\r\n          <div className=\"form-check form-switch\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              onClick={props.toggleMode}\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label className={`form-check-label text-${props.mode==='light'?'dark':'light'}`} htmlFor=\"flexSwitchCheckDefault\">\r\n              Enable Dark Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  console.log(props);\r\n  const [text, setText] = useState(\"\");\r\n  const [wrdLength, setwrdLength] = useState(0);\r\n  const handleUpClick = () => {\r\n    console.log(\"Upper Case was clicked\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Upper Case\", \"success\");\r\n  };\r\n  const handleLoClick = () => {\r\n    console.log(\"Upper Case was clicked\" + text);\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Lower Case\", \"success\");\r\n  };\r\n  const handleClearText=()=>{\r\n      let newText=\"\";\r\n      setText(newText);\r\n      props.showAlert(\"Text Cleared\", \"success\");\r\n  }\r\n  const handleOnchange = (event) => {\r\n    console.log(\"On change\");\r\n    setText(event.target.value);\r\n    let value = event.target.value.trim();\r\n    let arr1=value.split(' ');\r\n    let len=arr1.length;\r\n    let len1=len;\r\n    // arr1=arr1.filter(ele=>ele!=\"\");\r\n    // setwrdLength(arr1.length);\r\n    for(let i=0;i<len;i++){\r\n        if(arr1[i]==='' ){\r\n            len1--;\r\n        }\r\n    }\r\n    if(arr1!==null && arr1!==''){\r\n    setwrdLength(len1);\r\n    }\r\n    else{\r\n        setwrdLength(0);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n        <h2>{props.heading}</h2>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            style={{backgroundColor: props.mode==='dark'? 'grey': 'white', color: props.mode==='dark'?'white':'black'}}\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={(e)=>handleOnchange(e)}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>\r\n          Convert to UpperCase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>\r\n          Convert to LowerCase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleClearText}>\r\n            Clear Text\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n        <h2>Your text summary</h2>\r\n        <p>\r\n          {wrdLength} words and {text.length} characters\r\n        </p>\r\n        <p>{0.008 * wrdLength} Minutes Read</p>\r\n        <h3>Preview</h3>\r\n        <p>{text.length>0?text:\"Enter something in the textBox above to preview it here\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\n// import About from \"./components/About\";\nimport Alert from \"./components/Alert\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#050548\";\n      showAlert(\"Dark Mode has been enabled\", \"success\");\n      document.title = \"TextUtils - Dark Mode\";\n      // setInterval(() => {\n      //   document.title=\"TextUtils is amazing\";\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title=\"Install TextUtils\";\n      // }, 1500);\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode has been enabled\", \"success\");\n      document.title = \"TextUtils - Light Mode\";\n    }\n  };\n  return (\n    <>\n      \n      {/* <Router> */}\n        <Navbar\n          title=\"TextUtils2\"\n          aboutText=\"About TextUtils\"\n          mode={mode}\n          toggleMode={toggleMode}\n        />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Routes>\n            <Route path=\"/about\" element={<About />} />\n\n            <Route\n              path=\"/\"\n              element={ */}\n                <TextForm\n                  heading=\"Enter the text to analyze\"\n                  mode={mode}\n                  showAlert={showAlert}\n                  />\n                {/* }\n                /> */}\n          {/* </Routes> */}\n        </div>\n                {/* </Router> */}\n      \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}